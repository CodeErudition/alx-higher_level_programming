>>> from 2-matrix_divided.py import matrix_divided

# Test case 1: Regular matrix division
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test case 2: Division by a floating point number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3.5)
[[0.29, 0.57, 0.86], [1.14, 1.43, 1.71]]

# Test case 3: Division by 1
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

# Test case 4: Division by 0 (should raise ZeroDivisionError)
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 5: Matrix with non-numeric elements (should raise TypeError)
>>> matrix_divided([[1, 2, 'a'], [4, 5, 6]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a list of lists of integers/floats

# Test case 6: Matrix with rows of different lengths (should raise TypeError)
>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
Traceback (most recent call last):
    ...
TypeError: All rows of the matrix must have the same size

# Test case 7: Division by a non-numeric divisor (should raise TypeError)
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'a')
Traceback (most recent call last):
    ...
TypeError: div must be a number

